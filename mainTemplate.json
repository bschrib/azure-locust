{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters":{
    "location": {
      "type": "string",
      "metadata": {
        "description": "Location where resources will be provisioned. By default, the template deploys the resources to the same location as the resource group. If specified, must be a valid Azure location e.g. 'australiasoutheast'"
      },
      "defaultValue": "[resourceGroup().location]",
    },
    "instances": {
      "type": "int",
      "metadata": {
        "description": "Number of slaves"
      },
      "defaultValue": 30
    },
    "locustfileToRun": {
      "type": "string",
      "metadata": {
        "description": "Locustfile fullname (e.g. locustfile.py) which the test will call to run."
      },
      "defaultValue": "locustfile.py"
    },
    "prefix": {
      "type": "string",
      "metadata": {
        "description": "Please use only lower case and digits. Max 11 chars. If empty some random will be used."
      },
      "defaultValue": ""
    },
    "imageRegistryServer": {
      "type": "string",
      "metadata": {
        "description": "The server for customized locustio container"
      },
      "defaultValue": ""
    },
    "imageRegistryUser": {
      "type": "string",
      "metadata": {
        "description": "The user for customized locustio container"
      },
      "defaultValue": ""
    },
    "imageRegistryPass": {
      "type": "string",
      "metadata": {
        "description": "The password for customized locustio container"
      },
      "defaultValue": ""
    },
    "locustContainer": {
      "type": "string",
      "metadata": {
        "description": "The locust container to use"
      },
      "defaultValue": ""
    },
    "azureNetworkProfile": {
      "type": "string",
      "metadata": {
        "description": "The Azure network profile to use for containers"
      },
      "defaultValue": ""
    }
  },
  "variables": {
    "locustImage": "[if(empty(parameters('locustContainer')), 'locustio/locust:1.1.1', parameters('locustContainer'))]",
    "location": "[parameters('location')]",
    "prefix": "[if(empty(parameters('prefix')), uniqueString(resourceGroup().id), parameters('prefix'))]",
    "imageRegistryServer": "[parameters('imageRegistryServer')]",
    "imageRegistryUser": "[parameters('imageRegistryUser')]",
    "imageRegistryPass": "[parameters('imageRegistryPass')]",
    "azureCliImage": "microsoft/azure-cli",
    "locustfileToRun": "[parameters('locustfileToRun')]",
    "azureNetworkProfile": "[parameters('azureNetworkProfile')]",
    "containerMasterGroup": "[concat(variables('prefix'),'-master')]",
    "containerMasterName": "master",
    "containerMasterImage": "[variables('locustImage')]",
    "containerSlaveGroup": "[concat(variables('prefix'),'-slave')]",
    "containerSlaveName": "slave",
    "containerSlaveImage": "[variables('locustImage')]"
  },
  "resources": [
    {
      "name": "[variables('containerMasterGroup')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[variables('location')]",
      "properties": {
        "containers": [
          {
            "name": "[variables('containerMasterName')]",
            "properties": {
              "image": "[variables('containerMasterImage')]",
              "command": [
                "locust",
                "-f",
                "/home/locust/[variables('locustfileToRun')]",
                "--master",
                "--host",
                "https://"
              ],
              "resources": {
                "requests": {
                  "cpu": 1,
                  "memoryInGb": 2
                }
              },
              "ports": [
                {
                  "port": 8089
                },
                {
                  "port": 5557
                }
              ],
              "volumeMounts": [
                {
                  "name": "filesharevolume",
                  "mountPath": "/mnt/locust"
                }
              ]
            }
          }
        ],
        "imageRegistryCredentials": [
            {
                "server": "[variables('imageRegistryServer')]",
                "username": "[variables('imageRegistryUser')]",
                "password": "[variables('imageRegistryPass')]"
            }
        ],
        "osType": "Linux",
        "networkProfile": {
            "id": "[variables('azureNetworkProfile')]"
        },
        "ipAddress": {
          "type": "Private",
          "ports": [
            {
              "protocol": "tcp",
              "port": "8089"
            },
            {
              "protocol": "tcp",
              "port": "5557"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('containerSlaveGroup'), '-', copyIndex())]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2018-10-01",
      "location": "[variables('location')]",
      "copy": {
        "name": "slavecopy",
        "count": "[parameters('instances')]"
      },
      "properties": {
        "containers": [
          {
            "name": "[variables('containerSlaveName')]",
            "properties": {
              "image": "[variables('containerSlaveImage')]",
              "command": [
                "locust",
                "-f",
                "/home/locust/[variables('locustfileToRun')]",
                "--worker",
                "--master-host",
                "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', variables('containerMasterGroup'))).ipAddress.ip]"
              ],
              "resources": {
                "requests": {
                  "cpu": 1.5,
                  "memoryInGb": 0.5
                }
              },
              "volumeMounts": [
                {
                  "name": "filesharevolume",
                  "mountPath": "/mnt/locust"
                }
              ]
            }
          }
        ],
        "imageRegistryCredentials": [
          {
            "server": "[variables('imageRegistryServer')]",
            "username": "[variables('imageRegistryUser')]",
            "password": "[variables('imageRegistryPass')]"
          }
        ],
        "osType": "Linux",
        "networkProfile": {
            "id": "[variables('azureNetworkProfile')]"
        }
      }
    }
  ],
  "outputs": {
    "prefix": {
      "type": "string",
      "value": "[variables('prefix')]"
    }
  }
}